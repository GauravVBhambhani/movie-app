{"ast":null,"code":"var _jsxFileName = \"/Users/gorubhambhani/Desktop/movie-app/src/components/movie-list/index.tsx\";\nimport { Grid, Paper } from \"@mui/material\";\nimport React from \"react\";\nimport MovieCard from \"../movie-card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  recommendList\n}) => {\n  console.log(\"The recommendList is : \", recommendList);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: recommendList.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 0,\n        sx: {\n          backgroundColor: \"transparent\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["Grid","Paper","React","MovieCard","jsxDEV","_jsxDEV","MovieList","recommendList","console","log","container","spacing","children","map","item","xs","sm","md","lg","elevation","sx","backgroundColor","movie","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/gorubhambhani/Desktop/movie-app/src/components/movie-list/index.tsx"],"sourcesContent":["import { Grid, Paper } from \"@mui/material\";\nimport React from \"react\";\nimport { MovieDataType } from \"../../assets/data\";\nimport MovieCard from \"../movie-card\";\n\ninterface MovieListProps {\n  recommendList: MovieDataType[];\n}\n\nconst MovieList = ({ recommendList }: MovieListProps) => {\n  console.log(\"The recommendList is : \", recommendList);\n  return (\n    <Grid container spacing={2}>\n      {recommendList.map((item) => (\n        <Grid item key={item.id} xs={12} sm={6} md={4} lg={3}>\n          <Paper elevation={0} sx={{ backgroundColor: \"transparent\" }}>\n            <MovieCard movie={item} />\n          </Paper>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default MovieList;\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,KAAK,QAAQ,eAAe;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMtC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAA8B,CAAC,KAAK;EACvDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,aAAa,CAAC;EACrD,oBACEF,OAAA,CAACL,IAAI;IAACU,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACxBL,aAAa,CAACM,GAAG,CAAEC,IAAI,iBACtBT,OAAA,CAACL,IAAI;MAACc,IAAI;MAAeC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAN,QAAA,eACnDP,OAAA,CAACJ,KAAK;QAACkB,SAAS,EAAE,CAAE;QAACC,EAAE,EAAE;UAAEC,eAAe,EAAE;QAAc,CAAE;QAAAT,QAAA,eAC1DP,OAAA,CAACF,SAAS;UAACmB,KAAK,EAAER;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC,GAHMZ,IAAI,CAACa,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACE,EAAA,GAbItB,SAAS;AAef,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}